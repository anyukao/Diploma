# Generated by Django 5.0.6 on 2024-06-09 19:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Check_Pass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255, verbose_name='E-MAIL')),
                ('pin', models.CharField(max_length=255, verbose_name='Пин код')),
            ],
            options={
                'verbose_name': 'Проваерка пароля',
                'verbose_name_plural': 'Проверка пароля',
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('name', models.CharField(max_length=255, null=True, verbose_name='Наименование курса')),
                ('photo', models.FileField(null=True, upload_to='media/napravlenii', verbose_name='Изображение')),
                ('level', models.CharField(max_length=255, null=True, verbose_name='Уровень')),
                ('reiting', models.IntegerField(null=True, verbose_name='Рейтинг')),
                ('status', models.CharField(max_length=255, null=True, verbose_name='Статус')),
                ('price', models.IntegerField(null=True, verbose_name='Цена')),
                ('info_url', models.CharField(max_length=255, null=True, verbose_name='Ссылка на ознакомление')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Курсы',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Create_User_Check',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, verbose_name='Имя пользователя')),
                ('password', models.CharField(max_length=255, verbose_name='Пароль')),
                ('email', models.CharField(max_length=255, verbose_name='E-MAIL')),
                ('pin', models.CharField(max_length=255, verbose_name='Пин код')),
                ('image', models.FileField(default='/static/images/user/profile_image/userimage.png', upload_to='', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Проваерка пользователя при авторизации',
                'verbose_name_plural': 'Проверка пользователей при авторизации',
            },
        ),
        migrations.CreateModel(
            name='Napravlenii',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.FileField(null=True, upload_to='media/courses', verbose_name='Фото')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Наименование направления')),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'Направления',
            },
        ),
        migrations.CreateModel(
            name='Mentors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ментор',
                'verbose_name_plural': 'Менторы',
            },
        ),
        migrations.CreateModel(
            name='Courses_Of_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('sertificate', models.FileField(blank=True, null=True, upload_to='media/sertificate', verbose_name='Сертификат')),
                ('status', models.CharField(blank=True, max_length=255, null=True, verbose_name='Статус(В процессе / Пройден)')),
                ('courses', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_course', to='skillw.courses', verbose_name='Курсы')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_courses', to=settings.AUTH_USER_MODEL, verbose_name='Обучающийся')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_courses', to='skillw.mentors', verbose_name='Ментор')),
            ],
            options={
                'verbose_name': 'Курсы пользователя',
                'verbose_name_plural': 'Курсы пользователей',
            },
        ),
        migrations.AddField(
            model_name='courses',
            name='napravlenii',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='skillw.napravlenii', verbose_name='Направление'),
        ),
        migrations.CreateModel(
            name='Themes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Наименование темы')),
                ('description', models.CharField(max_length=1000, null=True, verbose_name='Описание')),
                ('napravlenie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='skillw.courses', verbose_name='Курсы')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_themes', to='skillw.mentors', verbose_name='Ментор')),
            ],
            options={
                'verbose_name': 'Тема',
                'verbose_name_plural': 'Темы',
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255, null=True, verbose_name='Ответ')),
                ('ocenka', models.CharField(max_length=255, null=True, verbose_name='Оценка')),
                ('status', models.CharField(max_length=255, null=True, verbose_name='Статус(В процессе / Пройден)')),
                ('course_of_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='skillw.courses_of_user', verbose_name='Курсы')),
                ('themes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='skillw.themes', verbose_name='Тема')),
            ],
            options={
                'verbose_name': 'Прогресс',
                'verbose_name_plural': 'Прогрессы',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Сообщение')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skillw.themes')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='media/themes', verbose_name='Файлы по теме')),
                ('themes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='skillw.themes', verbose_name='Тема')),
            ],
            options={
                'verbose_name': 'Файлы по теме',
                'verbose_name_plural': 'Файлы по темам',
            },
        ),
        migrations.CreateModel(
            name='User_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patronymic', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Дата рождения')),
                ('status', models.CharField(max_length=255, null=True, verbose_name='Статус')),
                ('image', models.FileField(default='/media/user/userimage.png', upload_to='media/user/', verbose_name='Фото')),
                ('number', models.CharField(max_length=255, null=True, verbose_name='Номер телефона')),
                ('country', models.CharField(max_length=255, null=True, verbose_name='Страна')),
                ('city', models.CharField(max_length=255, null=True, verbose_name='Город')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_info', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Информация о пользователе',
                'verbose_name_plural': 'Информация о пользователях',
            },
        ),
        migrations.CreateModel(
            name='Zapis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время записи')),
                ('email', models.CharField(max_length=255, null=True, verbose_name='E_MAIL')),
                ('number', models.CharField(max_length=255, null=True, verbose_name='Номер телефона')),
                ('napravlenie', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='skillw.courses', verbose_name='Курсы')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_zapis', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заявки на курсы',
                'verbose_name_plural': 'Заявки на курсы',
            },
        ),
        migrations.CreateModel(
            name='ZapisMentors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addnewcourse', models.CharField(blank=True, max_length=255, null=True, verbose_name='Предложение на добавление нового курса')),
                ('datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время записи')),
                ('email', models.CharField(max_length=255, null=True, verbose_name='E_MAIL')),
                ('number', models.CharField(max_length=255, null=True, verbose_name='Номер телефона')),
                ('course', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='skillw.courses', verbose_name='Курсы')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentorzapis', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заявка на ментора',
                'verbose_name_plural': 'Заявки на ментора',
            },
        ),
    ]
